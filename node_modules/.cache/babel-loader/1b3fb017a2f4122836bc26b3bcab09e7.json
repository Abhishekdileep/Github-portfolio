{"ast":null,"code":"var _jsxFileName = \"/home/jarvis/Documents/React/github-portfolio/src/components/List/List.component.jsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Link from '../components/Link/Link.component';\nimport List from '../components/List/List.component';\nconst Profile_container = styled.div`\nwidth: 50%;\nmargin: 10px auto;\n`;\nconst Profile_Avatar = styled.img`\nwidth: 150px;\n`;\nexport default class Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [{}],\n      repositories: [],\n      loadingProfile: true\n    };\n  }\n\n  async componentDidMount() {\n    const profile = await fetch('https://api.github.com/users/Abhishekdileep');\n    const profileJSON = await profile.json();\n    const repositories = await fetch(profileJSON.repos_url);\n    const repoJSON = await repositories.json();\n\n    if (profileJSON && repoJSON) {\n      this.setState({\n        data: profileJSON,\n        loading: false,\n        repositories: repoJSON\n      });\n    }\n  }\n\n  render() {\n    const {\n      data,\n      loadingProfile,\n      repositories\n    } = this.state;\n    const items = [{\n      \"label\": \"HTML url\",\n      \"value\": /*#__PURE__*/React.createElement(Link, {\n        url: data.html_url,\n        title: \"Github URL\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 23\n        }\n      })\n    }, {\n      \"label\": \"Repos url\",\n      \"value\": /*#__PURE__*/React.createElement(Link, {\n        url: data.repos_url,\n        title: \"Repo URL\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 23\n        }\n      })\n    }, {\n      \"label\": \"name\",\n      \"value\": data.name\n    }, {\n      \"label\": \"company\",\n      \"value\": data.company\n    }, {\n      \"label\": \"Location\",\n      \"value\": data.location\n    }, {\n      \"label\": \"Bio\",\n      \"value\": \"Hey there\"\n    }, {\n      \"label\": \"Followers\",\n      \"value\": data.followers\n    }];\n    const project = repositories.map(({\n      name,\n      html_url\n    }) => {\n      return {\n        \"label\": name,\n        \"value\": /*#__PURE__*/React.createElement(Link, {\n          url: html_url,\n          title: \"Github Repo \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 23\n          }\n        })\n      };\n    });\n    if (loadingProfile) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 32\n      }\n    }, \"Loading .... \");else {\n      return /*#__PURE__*/React.createElement(Profile_container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Profile_Avatar, {\n        src: data.avatar_url,\n        alt: \"Avatar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(List, {\n        items: items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/jarvis/Documents/React/github-portfolio/src/components/List/List.component.jsx"],"names":["React","Component","styled","Link","List","Profile_container","div","Profile_Avatar","img","Profile","constructor","state","data","repositories","loadingProfile","componentDidMount","profile","fetch","profileJSON","json","repos_url","repoJSON","setState","loading","render","items","html_url","name","company","location","followers","project","map","avatar_url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nimport Link from '../components/Link/Link.component'\nimport List from '../components/List/List.component'\n\nconst Profile_container = styled.div`\nwidth: 50%;\nmargin: 10px auto;\n`\nconst Profile_Avatar = styled.img`\nwidth: 150px;\n`\n\nexport default class Profile extends Component {\n    constructor(){\n        super(); \n        this.state = {\n           data : [{}],\n           repositories : [],\n           loadingProfile : true \n        }\n    }\n    async componentDidMount(){\n        const profile = await fetch('https://api.github.com/users/Abhishekdileep');\n        const profileJSON =await  profile.json();\n        const repositories = await fetch(profileJSON.repos_url);\n        const repoJSON = await repositories.json();\n        \n        if(profileJSON && repoJSON){\n            this.setState({\n                data :profileJSON,\n                loading : false,\n                repositories : repoJSON,\n            })\n          \n            \n        }\n    }\n    \n    render() {\n        const { data , loadingProfile ,repositories } = this.state ;\n        const items = [{\n            \"label\" : \"HTML url\",\n            \"value\" : <Link url={data.html_url} title='Github URL' />\n        },\n        {\n            \"label\" : \"Repos url\",\n            \"value\" : <Link url={data.repos_url} title='Repo URL' />\n        },\n        {\n            \"label\" : \"name\",\n            \"value\" : data.name\n        },\n        {\n            \"label\" : \"company\",\n            \"value\" : data.company\n        },\n        {\n            \"label\" : \"Location\",\n            \"value\" : data.location\n        },\n        {\n            \"label\" : \"Bio\",\n            \"value\" :  \"Hey there\"\n        },\n        {\n            \"label\" : \"Followers\",\n            \"value\" : data.followers\n        }\n    ];\n    const project = repositories.map(({name , html_url })=>{\n        return ({\n            \"label\" : name ,\n            \"value\" : <Link url={html_url} title={\"Github Repo \"} />\n        })\n    })\n            \n    if(loadingProfile) return (<div>Loading .... </div>)\n    else {\n        return (    \n               <Profile_container >\n              <Profile_Avatar src={data.avatar_url} alt=\"Avatar\"></Profile_Avatar>\n          <List items={items} />\n      </Profile_container>\n    )\n    }\n         \n   \n    }\n}\n"]},"metadata":{},"sourceType":"module"}